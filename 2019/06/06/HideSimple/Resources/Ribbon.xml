<?xml version="1.0" encoding="utf-8"?>
<customUI
  xmlns="http://schemas.spaceclaim.com/customui"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://schemas.spaceclaim.com/customui http://schemas.spaceclaim.com/customui/SpaceClaimCustomUI.V17.xsd">
	<ribbon>
		<tabs>
			<tab id="LXAddIn.C#.V17.RibbonTab" command="LXAddIn.C#.V17.RibbonTab">
				<!-- 
					For the 'tab' and 'group' elements, you can either specify a 'label' attribute, or you can
					specify a 'command' attribute.  The 'command' attribute gives the name of a command that you
					create, whose Text property will be used for the label.  This approach allows for localization
					since you can use a string resource.  For illustration, this first 'group' uses a 'command' 
					attribute, and the remaining 'group' elements use a 'label' attribute.  If you specify both
					attributes, the 'label' attribute is overridden by the 'command' attribute.
				-->
				<group id="LXAddIn.C#.V17.PartGroup" command="LXAddIn.C#.V17.PartGroup">
					<!-- 
						Command names match the names of Command objects created by the add-in in its 
						ICommandExtensibility.Initialize method, or the names of built-in commands. Command names
						need to be unique, and are typically of the form, "MyAddIn.MyCommandName".  Since there
						are several sample add-ins for different languages and different versions of the API, and
						since more than one of these sample add-ins might be enabled, these sample add-in commands
						have the language and API version build into their name too, so that they do not clash.
						In most cases a simple name of the form, "MyAddIn.MyCommandName", will suffice.
										  
						A 'button' element can also have a 'label' attribute instead of a 'command' attribute.
						This could be used as a placeholder before a Command object has been created.  Note that
						the image can only be specified if you use the 'command' attribute.  The Image property 
						of the Command object is used.
					-->
					<button id="LXAddIn.C#.V17.Hide" size="large" command="LXAddIn.C#.V17.Hide"/>
					
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>